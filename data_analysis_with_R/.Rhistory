scale_x_continuous(limits = c(0, 1000),
breaks = seq(0, 1000, 50)) + facet_wrap(~gender)
qplot(x = friend_count, data = subset(pf, !is.na(gender)), binwidth = 10) +
scale_x_continuous(limits = c(0, 1000),
breaks = seq(0, 1000, 50)) + facet_wrap(~gender)
table(pf$gender)
by(pf$friend_count, pf$gender, summary)
qplot(x = tenure, data = pf, binwidth = 30, color = I('black'),
fill = I('#099009'))
qplot(x = tenure/360, data = pf, binwidth = .25, color = I('black'),
fill = I('#F79420')) + scale_x_continuous(breaks = seq(1, 7, 1), limits = c(0,7))
qplot(x = tenure/360, data = pf, binwidth = .25, color = I('black'),
xlab = 'Number of years using Facebook',
ylab = 'Number of users in sample',
fill = I('#F79420')) + scale_x_continuous(breaks = seq(1, 7, 1), limits = c(0,7))
names(pf)
qplot(x = age, data = pf)
summary(pf$age)
qplot(x = age, data = pf, color = I('black'),
xlab = 'Age of users in Facebook',
ylab = 'Number of users in sample',
fill = I('#F79420')) + scale_x_continuous(breaks = seq(1, 5, 120))
qplot(x = age, data = pf, color = I('black'), binwidth = 1,
xlab = 'Age of users in Facebook',
ylab = 'Number of users in sample',
fill = I('#F79420')) + scale_x_continuous(breaks = seq(1, 5, 120))
qplot(x = age, data = pf, color = I('black'), binwidth = 1,
xlab = 'Age of users in Facebook',
ylab = 'Number of users in sample',
fill = I('#F79420')) + scale_x_continuous(breaks = seq(1, 5, 120)) +
face_wrap(~gender)
qplot(x = age, data = pf, color = I('black'), binwidth = 1,
xlab = 'Age of users in Facebook',
ylab = 'Number of users in sample',
fill = I('#F79420')) + scale_x_continuous(breaks = seq(1, 5, 120)) +
facet_wrap(~gender)
?subset
qplot(x = age, data = subset(pf, !is.na(pf$gender)), color = I('black'), binwidth = 1,
xlab = 'Age of users in Facebook',
ylab = 'Number of users in sample',
fill = I('#F79420')) + scale_x_continuous(breaks = seq(1, 5, 120)) +
facet_wrap(~gender)
by(pf$age, pf$gender, summary)
qplot(x = age, data = subset(pf, !is.na(pf$gender)), color = I('black'), binwidth = 1,
xlab = 'Age of users in Facebook',
ylab = 'Number of users in sample',
fill = I('#F79420')) + scale_x_discrete(breaks = seq(1, 5, 120)) +
facet_wrap(~gender)
qplot(x = age, data = subset(pf, !is.na(pf$gender)), color = I('black'), binwidth = 1,
xlab = 'Age of users in Facebook',
ylab = 'Number of users in sample',
fill = I('#F79420')) + scale_x_discrete(breaks = seq(1, 120, 5)) +
facet_wrap(~gender)
qplot(x = age, data = subset(pf, !is.na(pf$gender)), color = I('black'), binwidth = 1,
xlab = 'Age of users in Facebook',
ylab = 'Number of users in sample',
fill = I('#F79420')) + scale_x_discrete(breaks = seq(1, 120, 30)) +
facet_wrap(~gender)
summary(pf$friend_count)
summary(logbase10(pf$friend_count))
summary(log10(pf$friend_count))
summary(log10(pf$friend_count + 1))
install.packages('grid.Extra')
qplot(x = friend_count, data = subset(pf, !is.na(gender)), binwidth = 10, geom = 'freqpoly',
color = gender) +
scale_x_continuous(limits = c(0, 1000),
breaks = seq(0, 1000, 50)) + facet_wrap(~gender)
qplot(x = friend_count, data = subset(pf, !is.na(gender)), binwidth = 10, geom = 'freqpoly',
color = gender) +
scale_x_continuous(limits = c(0, 1000),
breaks = seq(0, 1000, 50))
qplot(x = friend_count, y = ..count../sum(..count..),
xlab = 'Friend Count', ylab = 'Proportion of Users with that friend count',
data = subset(pf, !is.na(gender)), binwidth = 10, geom = 'freqpoly',
color = gender) +
scale_x_continuous(limits = c(0, 1000),
breaks = seq(0, 1000, 50))
qplot(x = www_likes, data = subset(pf, !is.na(gender)), geom = 'freqpoly',
color = gender)
qplot(x = www_likes, data = subset(pf, !is.na(gender)), geom = 'freqpoly',
color = gender) + scale_x_continuous()
qplot(x = www_likes, data = subset(pf, !is.na(gender)), geom = 'freqpoly',
color = gender) + scale_x_continuous() + scale_x_log10()
qplot(x = gender, y = friend_count,
data = subset(pf, !is.na(gender)),
geom = 'boxplot',
color = gender)
qplot(x = gender, y = friend_count,
data = subset(pf, !is.na(gender)),
geom = 'boxplot',
color = gender, ylim = c(0,1000))
qplot(x = gender, y = friend_count,
data = subset(pf, !is.na(gender)),
geom = 'boxplot',
color = gender) + scale_y_continuous(limit=c(0,1000))
qplot(x = gender, y = friend_count,
data = subset(pf, !is.na(gender)),
geom = 'boxplot',
color = gender) + scale_y_continuous(limits=c(0,1000))
by(pf$friend_count, pf$gender, summary)
qplot(x = gender, y = friend_count,
data = subset(pf, !is.na(gender)),
geom = 'boxplot',
color = gender) + coord_cartesian(limits=c(0,250))
qplot(x = gender, y = friend_count,
data = subset(pf, !is.na(gender)),
geom = 'boxplot',
color = gender) + coord_cartesian(ylim=c(0,250))
?coord_carte
str(pf)
qplot(x = gender, y = friendships_initiated,
data = subset(pf, !is.na(gender)),
geom = 'boxplot',
color = gender)
qplot(x = gender, y = friendships_initiated,
data = subset(pf, !is.na(gender)),
geom = 'boxplot',
color = gender) + coord_cartesian(ylim = c(0,250))
qplot(x = gender, y = friendships_initiated,
data = subset(pf, !is.na(gender)),
geom = 'boxplot',
color = gender) + coord_cartesian(ylim = c(0,150))
by(pf$friendships_initiated, pf$gender, summary)
mobile_check_in <- NA
pf$mobile_check_in <- ifelse(pf$mobile_likes > 0, 1, 0)
pf$mobile_check_in <- factor(pf$mobile_check_in)
summary(pf$mobile_check_in)
summary(pf$mobile_likes)
summary(pf$mobile_likes > 0)
str(pf)
str(facebook)
sum(pf$mobile_check_in)/length(pf$mobile_check_in)
ave(pf$mobile_check_in)
sum(pf$mobile_check_in == 1)/ length(pf$mobile_check_in)
getwd()
pf <- read.csv('pseudo_facebook.tsv', sep = '\t')
qplot(x = age, y = friend_count, data = pf)
ggplot(aes(x = age, y = friend_count), data = pf) + geom_point() + xlim(13, 90)
summary(pf$age)
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_point(alpha = 1/20) + xlim(13, 90)
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_jitter(alpha = 1/20) + xlim(13, 90)
?coord_trans
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_jitter(alpha = 1/20) + xlim(13, 90) + coord_trans(xtrans = 'sqrt')
geom_jitter(alpha = 1/20) + xlim(13, 90) + coord_trans(ytrans = 'sqrt')
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_jitter(alpha = 1/20) + xlim(13, 90) + coord_trans(ytrans = 'sqrt')
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_jitter(alpha = 1/20) + xlim(13, 90) + coord_trans(y = 'sqrt')
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_point(alpha = 1/20, position_jitter(h = 0)) +
xlim(13, 90) + coord_trans(y = 'sqrt')
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_point(alpha = 1/20, position = position_jitter(h = 0)) +
xlim(13, 90) + coord_trans(y = 'sqrt')
str(pf)
ggplot(aes(x = age, y = friendships_initiated), data = pf) +
geom_point(alpha = 1/20) +
xlim(13, 90) + coord_trans(y = 'sqrt')
ggplot(aes(x = age, y = friendships_initiated), data = pf) +
geom_point(alpha = 1/20) +
xlim(13, 90)
geom_jitter(alpha = 1/20) +
ggplot(aes(x = age, y = friendships_initiated), data = pf) +
geom_jitter(alpha = 1/20) +
xlim(13, 90)
ggplot(aes(x = age, y = friendships_initiated), data = pf) +
geom_point(alpha = 1/20, position = 'jitter') +
coord_trans(y = 'sqrt')
ggplot(aes(x = age, y = friendships_initiated), data = pf) +
geom_point(alpha = 1/20, position = position_jitter(h = 0)) +
coord_trans(y = 'sqrt')
ggplot(aes(x = age, y = friendships_initiated), data = pf) +
geom_point(alpha = 1/20, position = position_jitter(h = 0)) +
coord_trans(y = 'sqrt') + xlim(13, 90) +
geom_line(stat = 'summary', fun.y = mean)
ggplot(aes(x = age, y = friendships_initiated), data = pf) +
geom_point(alpha = 1/20, position = position_jitter(h = 0), color = 'orange') +
coord_trans(y = 'sqrt') + xlim(13, 90) +
geom_line(stat = 'summary', fun.y = mean)
ggplot(aes(x = age, y = friendships_initiated), data = pf) +
geom_point(alpha = 1/20, position = position_jitter(h = 0), color = 'orange') +
coord_trans(y = 'sqrt') + xlim(13, 90) +
geom_line(stat = 'summary', fun.y = mean) +
geom_line(stat = 'summary', fun.y = quantile, probs = 0.1, linetype = 2, color = 'blue') +
geom_line(stat = 'summary', fun.y = quantile, probs = 0.9, linetype = 2, color = 'blue') +
geom_line(stat = 'summary', fun.y = quantile, probs = 0.5, color = 'blue')
cor.test(pf$age, pf$friend_count, method = 'pearson')
with(subset(pf, age <= 70), cor.test(age, friend_count))
ggplot(aes(likes_received, www_likes_received), data = pf) +
geom_point()
ggplot(aes(y = likes_received, x = www_likes_received), data = pf) +
geom_point() +
xlim(0, quantile(pf$www_likes_received, 0.95)) +
ylim(0, quantile(pf$www_likes_received, 0.95))
with(pf, cor.test(www_likes_received, likes_received))
library(ggplot2) #must load the ggplot package first
data(diamonds) #loads the diamonds data set since it comes with the ggplot package
summary(diamonds)
?diamonds
str(diamonds)
ggplot(aes(x = price), data = diamonds)
qplot(x=price, data=diamonds)
summary(diamonds$price)
sum(diamonds$price < 500)
sum(diamonds$price < 250)
sum(diamonds$price > 15000)
sum(diamonds$price >= 15000)
qplot(x = price, data = diamonds) +
scale_x_continuous(limits = c(0, 3000), breaks = seq(0, 1000, 50))
qplot(x = price, data = diamonds) +
scale_x_continuous(limits = c(0, 3000), breaks = seq(0, 3000, 100))
qplot(x = price, data = diamonds) +
scale_x_continuous(limits = c(0, 3000), breaks = seq(0, 3000, 300))
qplot(x = price, data = diamonds) +
scale_x_discrete(limits = c(0, 3000), breaks = seq(0, 3000, 300))
qplot(x = price, data = diamonds) +
scale_x_continuous(limits = c(0, 3000), breaks = seq(0, 3000, 300))
qplot(x = price, data = diamonds) +
scale_x_continuous(limits = c(0, 1500), breaks = seq(0, 1500, 300))
qplot(x = price, data = diamonds) +
scale_x_continuous(limits = c(0, 1500), breaks = seq(0, 1500, 100))
qplot(x = price, data = diamonds) +
scale_x_continuous(limits = c(0, 1500), breaks = seq(0, 1500, 100))
ggsave('priceHistogram.png')
qplot(x = price, data = diamonds, binwidth = 1) +
scale_x_continuous(limits = c(0, 1500), breaks = seq(0, 1500, 100))
ggsave('priceHistogram.png')
View(diamonds)
qplot(x = price, data = diamonds, binwidth = 10) + facet_wrap(~cut)
qplot(x = price, data = diamonds) + facet_wrap(~cut)
table(diamonds$price)
by(diamonds$price, diamonds$cut, summary)
by(diamonds$price, diamonds$cut, max)
qplot(x = price, data = diamonds) + facet_wrap(~cut, scales = 'free_x')
qplot(x = price, data = diamonds) + facet_wrap(~cut, scales = 'free_y')
View(diamonds)
View(diamonds)
diamonds$price/diamonds$carat
qplot(x = price/carat, data = diamonds) + facet_wrap(~cut)
qplot(x = price/carat, data = diamonds, binwidth = 10) + facet_wrap(~cut)
qplot(x = price/carat, data = diamonds, binwidth = 10) + facet_wrap(~cut) +
scale_x_log10()
qplot(x = price/carat, data = diamonds) + facet_wrap(~cut) +
scale_x_log10()
qplot(x = price/carat, data = diamonds, binwidth = 10) + facet_wrap(~cut) +
scale_x_log10()
qplot(x = price/carat, data = diamonds, binwidth = 0.1) + facet_wrap(~cut) +
scale_x_log10()
qplot(x = price/carat, data = diamonds, binwidth = range/50) + facet_wrap(~cut) +
scale_x_log10()
qplot(x = price/carat, data = diamonds, binwidth = 0.01) + facet_wrap(~cut) +
scale_x_log10()
qplot(x = price/carat, data = diamonds) + facet_wrap(~cut) +
qplot(x = price/carat, data = diamonds) + facet_wrap(~cut) +
scale_x_log10()
qplot(x = price/carat, data = diamonds) + facet_wrap(~cut) +
scale_x_log10()
qplot(x = cut, y = price,
data = diamonds,
geom = 'boxplot',
color = cut)
qplot(x = color, y = price,
data = diamonds,
geom = 'boxplot',
color = color)
by(diamonds$price, diamonds$color, summary)
qplot(x = clarity, y = price,
data = diamonds,
geom = 'boxplot',
color = clarity)
by(diamonds$price, diamonds$clarity, summary)
?diamonds
7695 - 1860
4214 - 911
qplot(x = color, y = price/carat,
data = diamonds,
geom = 'boxplot',
color = color)
qplot(x = carat, data = diamonds, geom = 'freqpoly')
qplot(x = carat, data = diamonds, geom = 'freqpoly', binwidth = 5/60)
5/60
5/100
qplot(x = carat, data = diamonds, geom = 'freqpoly', binwidth = 5/100)  +
scale_x_continuous(limits = c(0, 5.4),
breaks = seq(0, 5.4, 5/100))
qplot(x = carat, data = diamonds, geom = 'freqpoly', binwidth = 0.1)  +
scale_x_continuous(limits = c(0, 5.4),
breaks = seq(0, 5.4, 0.1))
qplot(x = carat, data = diamonds, geom = 'freqpoly', binwidth = 0.1)  +
scale_x_continuous(limits = c(0, 2.4),
breaks = seq(0, 2.4, 0.1))
qplot(x = carat, data = diamonds, geom = 'freqpoly', binwidth = 0.1)  +
scale_x_continuous(limits = c(0, 2.4),
breaks = seq(0, 2.4, 0.1)) +
scale_y_continuous(breaks = seq(0, 3000, 1000))
qplot(x = carat, data = diamonds, geom = 'freqpoly', binwidth = 0.1)  +
scale_x_continuous(limits = c(0, 5.0),
breaks = seq(0, 2.4, 5.0)) +
scale_y_continuous(breaks = seq(0, 3000, 1000))
qplot(x = carat, data = diamonds, geom = 'freqpoly', binwidth = 0.1)  +
scale_x_continuous(limits = c(0, 5.0),
breaks = seq(0, 5.0, 0.1)) +
scale_y_continuous(breaks = seq(0, 3000, 1000))
?"table
ddd;
?
dfs
?"table"
qplot(x = carat, data = diamonds, geom = 'freqpoly', binwidth = 0.01)  +
scale_x_continuous(limits = c(0, 2.4),
breaks = seq(0, 2.4, 0.01)) +
scale_y_continuous(breaks = seq(0, 3000, 1000))
with(diamonds, table(carat))
getwd()
list.files()
setwd('/Users/Warren/Desktop/Udacity/data_analysis_with_R/indicator_age_of_marriage')
list.files()
setwd('/Users/Warren/Desktop/Udacity/data_analysis_with_R/indicator_age_of_marriage.csv')
list.files()
marriage <- read.csv('Data-Table 1.csv', header = T, row.names = 1, check.names = F)
View(marriage)
View(marriage)
str(marriage)
marriage2 <- read.csv('Data-Table 1.csv')
str(marriage2)
ncol(marriage)
qplot(x = `2005`, data = marriage, binwidth = 1) #+
qplot(x = `2005`, data = marriage) #+
qplot(x = `2005`, data = marriage, color = 'blue') #+
qplot(x = `2005`, data = marriage, color = clarity) #+
qplot(x = `2005`, data = marriage) #+
qplot(x = `2004`, data = marriage)
qplot(x = `2004`, data = marriage)
qplot(x = `2005`, data = marriage)
qplot(x = `2003`, data = marriage)
qplot(x = carat, data = diamonds, geom = 'freqpoly', binwidth = 0.01)
qplot(x = `2005`, data = marriage, geom = 'freqpoly', binwidth = 0.01)
qplot(x = `2005`, data = marriage, geom = 'freqpoly')
with(marriage, table(`2005`))
getwd()
setwd('/Users/Warren/Desktop/Udacity/data_analysis_with_R/')
fb_friends_birthdays <- read.csv('friends_birthdays.csv')
bdays <- fb_friends_birthdays
View(bdays)
View(bdays)
as.Date(bdays$Start, format = '%m/%d/%y')
as.Date(bdays$Start, format = '%m/%d/%Y')
bdays$clean_dates <- as.Date(bdays$Start, format = '%m/%d/%Y')
month(bdays$clean_dates)
library(lubridate)
require(lubridate)
format(bdays$clean_dates, '%m')
bdays$month <- format(bdays$clean_dates, '%m')
qplot(x = month, data = bdays)
with(bdays, table(month))
bdays$day <- format(bdays$clean_dates, '%d')
with(bdays, table(day))
qplot(x = day, data = bdays)
install.packages('alr3')
library(alr3)
data(Mitchell)
?Mitchell
qplot(data = Mitchell, x = Month, y = Temp)
str(Mitchell)
Mitchell$Month
cor(Mitchell)
ggplot(aes(x = Month, y = Temp), data = Mitchell) + geom_point()
ggplot(aes(x = Month, y = Temp), data = Mitchell) + geom_point() +
scale_x_discrete(breaks=seq(1,203,12
))
ggplot(aes(x = Month, y = Temp), data = Mitchell) + geom_point() +
scale_x_discrete(breaks=seq(1,203,11))
ggplot(aes(x = Month, y = Temp), data = Mitchell) + geom_point() + geom_point() +
scale_x_discrete(breaks=seq(1,203,11))
ggplot(aes(x = Month, y = Temp), data = Mitchell) + geom_point() + geom_line() +
scale_x_discrete(breaks=seq(1,203,11))
ggplot(aes(x=(Month%%12),y=Temp),data=Mitchell)+
geom_point()
x <- seq(0, 4*pi, pi/20)
y <- cos(x)
qplot(x = x, y = y)
dcor.ttest(x, y)
install.packages("energy")
library(energy)
dcor.ttest(x, y)
cor.test(x, y)
pf.fc_by_age
pf
head(pf)
age_groups <- group_by(pf, age)
pf.fc_by_age <- summarise(age_groups,
friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n())
pf.fc_by_age <- arrange(pf.fc_by_age, age)
install.packages('dplyr') # NEED TO INSTALL THIS
library(dplyr)
age_groups <- group_by(pf, age)
pf.fc_by_age <- summarise(age_groups,
friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n())
pf.fc_by_age
ggplot(aes(x = age, y = friend_count_mean), data = pf.fc_by_age) + geom_line()
str(pf)
12 - pf$dob_month
(12 - pf$dob_month)/12
(12 - pf$dob_month)/12 + pf$age
(12 - pf$dob_month)/12
(12 - pf$dob_month)/12
(12 - pf$dob_month)/12 + pf$age
head(pf)
head((12 - pf$dob_month)/12 + pf$age)
pf$age_with_months <- (12 - pf$dob_month)/12 + pf$age
age_groups_month <- group_by(pf, age_with_months)
pf.fc_by_age_months <- summarise(age_groups_month,
friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n())
pf.fc_by_age_months <- arrange(pf.fc_by_age_months, age_with_months)
head(pf.fc_by_age_months)
ggplot(aes(age_with_months, friend_count_mean), data = subset(pf.fc_by_age_months, age_with_months <= 71)) +
geom_line()
ggplot(aes(age_with_months, friend_count_mean), data = subset(pf.fc_by_age_months, age_with_months <= 71)) +
geom_line() + geom_smooth()
str(diamonds)
ggplot(aes(x = price, y = carat), data = diamonds) + geom_point()
cor.test(diamonds$price, diamonds$x)
cor.test(diamonds$price, diamonds$y)
cor.test(diamonds$price, diamonds$z)
ggplot(aes(x = price, y = depth), data = diamonds) + geom_point()
cor.test(diamonds$price, diamonds$depth)
ggplot(aes(x = price, y = carat), data = diamonds) + geom_point()
ggplot(aes(x = price, y = carat), data = diamonds) + geom_point() +
xlim(0, quantile(diamonds$carat, 0.99)) +
ylim(0, quantile(diamonds$price, 0.99))
ggplot(aes(x = price, y = carat), data = diamonds) +
xlim(0, quantile(diamonds$carat, 0.99)) +
ylim(0, quantile(diamonds$price, 0.99)) +
geom_point()
ggplot(aes(x = price, y = carat), data = diamonds) +
xlim(0, quantile(diamonds$carat, 0.99)) +
ylim(0, quantile(diamonds$price, 0.99)) +
geom_point()
ggplot(aes(x = price, y = carat), data = diamonds) +
xlim(0, quantile(diamonds$carat, 0.99)) +
ylim(0, quantile(diamonds$price, 0.99)) +
geom_point()
ggplot(aes(x = carat, y = price), data = diamonds) +
xlim(0, quantile(diamonds$carat, 0.99)) +
ylim(0, quantile(diamonds$price, 0.99)) +
geom_point()
diamonds$x * diamonds$y * diamonds$z
diamonds$volume <- diamonds$x * diamonds$y * diamonds$z
ggplot(aes(x = price, y = volume), data = diamonds) + geom_point()
ggplot(aes(x = price, y = volume), data = diamonds) + geom_point(alpha = 1/100)
ggplot(aes(x = price, y = volume), data = diamonds) + geom_point(alpha = 1/20) +
ylim(0, 1000)
sum(diamonds$volume == 0)
count(diamonds$volume == 0)
install.packages("plyr")
library(plyr)
install.packages("plyr")
library(plyr)
count(diamonds$volume == 0)
subset(diamonds, volume != 0)
subset(diamonds, (volume != 0) & (volume < 800))
cor(subset(diamonds, (volume != 0) & (volume < 800)))
temp <- subset(diamonds, (volume != 0) & (volume < 800))
cor.test(temp$volume, temp$price)
ggplot(aes(x = price, y = volume), data = temp) + geom_point(alpha = 1/10)
ggplot(aes(x = price, y = volume), data = temp) + geom_point(alpha = 1/10) +
geom_smooth()
?geom_smooth
ggplot(aes(x = price, y = volume), data = temp) + geom_point(alpha = 1/10) +
geom_smooth(stat = 'lm')
ggplot(aes(x = price, y = volume), data = temp) + geom_point(alpha = 1/10) +
stat_smooth(stat = 'lm')
ggplot(aes(x = price, y = volume), data = temp) + geom_point(alpha = 1/10) +
geom_smooth('lm')
ggplot(aes(x = price, y = volume), data = temp) + geom_point(alpha = 1/10) +
stat_smooth('lm')
ggplot(aes(x = price, y = volume), data = temp) + geom_point(alpha = 1/10) +
stat_smooth(method = 'lm')
clarityGroups <- group_by(diamonds, clarity)
diamondsByClarity <- summarise(clarityGroups,
mean_price = mean(price),
median_price = median(price),
min_price = min(price),
max_price = max(price),
n = n())
clarityGroups
diamondsByClarity <- summarise(clarityGroups,
mean_price = mean(price),
median_price = median(price),
min_price = min(price),
max_price = max(price),
n = n())
diamondsByClarity <- summarise(clarityGroups,
mean_price = mean(price),
median_price = median(price),
min_price = min(price),
max_price = max(price),
n = n())
detach("package:plyr", unload=TRUE)
detach("package:scales", unload=TRUE)
detach("package:ggplot", unload=TRUE)
detach(plyr)
detach('plyr')
